trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'bd81848e-35c4-4fff-a8b0-b1dbabb0cd66'
  imageRepository: 'benyttsimplewebhalloworld'
  containerRegistry: 'benkaregistry.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'
  imageName: webhelloworldimage
  webAppName: benka
  azureSubscription: Connection
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: Authenticate
  displayName: Authenticating
  jobs:
  - job: Authenticate
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: 'az container create -–resource-group benkacloud -–name benkaregistry -–image benkakaregistry.azurecr.io/webhelloworldimage:%TAG -–cpu 1 -–memory 1 –-registry-login-server %ACRLOGINSERVER –registry-username %ACRNAME –-registry-password %ACRPASSWORD'

- stage: Deploy
  pool:
    vmImage: 'ubuntu-latest'

  jobs:
  - job: Deploy
    steps:
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Connection'
        appType: 'webAppContainer'
        WebAppName: $(webAppName)
        deployToSlotOrASE: true
        ResourceGroupName: 'benkacloud'
        SlotName: 'production'
        DockerNamespace: '$(containeRregistry)'
        DockerRepository: '$(imagename)'
        DockerImageTag: '$(tag)'
    